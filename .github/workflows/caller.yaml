name: Dispatch Workflow

on:
  workflow_dispatch:
    inputs:
      location:
        description: 'location'
        required: true
        default: 'southcentralus'
      resourcegroup:
        description: 'resourcegroup'
        required: true
        default: 'default-rg'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Run Terraform
        run: |
          echo "location = '${{ github.event.inputs.location }}'" >> input.tfvars
          echo "resourcegroup = '${{ github.event.inputs.resourcegroup }}'" >> input.tfvars
          terraform init
          terraform plan -var-file=input.tfvars


    # - name: Terraform Plan
    #   run: terraform plan -var "environment=${{ env.ENVIRONMENT }}" -var "resource_group=${{ env.RESOURCE_GROUP }}"

    # - name: Terraform Apply
    #   run: terraform apply -var "environment=${{ env.ENVIRONMENT }}" -var "resource_group=${{ env.RESOURCE_GROUP }}"










# name: caller-tf-selfservice

# #on: push
# on:
#   push:
#   workflow_dispatch:
#     inputs:
#       flutter_version:
#         description: 'Framework version'
#         required: true
#         default: '2.5.3'

# jobs:
#   build:
#     uses: vinayprakash893/azure-terraform-actions-reusable/.github/workflows/build.yaml@main
#     with:
#       environment: devop
#       terraform_directory: ""
#       artifact-name: '${{ github.event.inputs.flutter_version }}'
#     secrets: inherit
    


# jobs:
#   Validating:
#     name: Validate
#     if: github.event_name == 'pull_request' || github.event.ref == 'refs/heads/main'
#     env:
#       ARTIFACT_NAME: "arti-11"
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Use Terraform Build Action
#         uses: vinayprakash893/azure-terraform-actions-reusable/.github/workflows/build.yaml@main
#         with:
#           terraform_directory: app/sub2
#           artifact-name: ${{ env.ARTIFACT_NAME }}
#         env:
#           ARTIFACT_NAME: ${{ env.artifactname }}
